type AbbreviationMap = { [key: string]: string };

const abbreviations: AbbreviationMap = {
  ALLEY: "ALY",
  ANNEX: "ANX",
  APARTMENT: "APT",
  ARCADE: "ARC",
  AVENUE: "AVE",
  BASEMENT: "BSMT",
  BAYOO: "BYU",
  BEACH: "BCH",
  BEND: "BND",
  BLUFF: "BLF",
  BLUFFS: "LFS",
  BOTTOM: "BTM",
  BOULEVARD: "BLVD",
  BRANCH: "BR",
  BRIDGE: "BRG",
  BROOK: "BRK",
  BROOKS: "BRKS",
  BUILDING: "BLDG",
  BURG: "BG",
  BURGS: "BGS",
  BYPASS: "BYP",
  CAMP: "CP",
  CANYON: "CYN",
  CAPE: "CPE",
  CAUSEWAY: "CSWY",
  CENTER: "CTR",
  CENTERS: "CTRS",
  CIRCLE: "CIR",
  CIRCLES: "CIRS",
  CLIFF: "CLF",
  CLIFFS: "CLFS",
  CLUB: "CLB",
  COMMON: "CMN",
  CORNER: "COR",
  CORNERS: "CORS",
  COURSE: "CRSE",
  COURT: "CT",
  COURTS: "CTS",
  COVE: "CV",
  COVES: "CVS",
  CREEK: "CRK",
  CRESCENT: "CRES",
  CREST: "CRST",
  CROSSING: "XING",
  CROSSROAD: "XRD",
  CURVE: "CURV",
  DALE: "DL",
  DAM: "DM",
  DEPARTMENT: "DEPT",
  DIVIDE: "DV",
  DRIVE: "DR",
  DRIVES: "DRS",
  ESTATE: "EST",
  ESTATES: "ESTS",
  EXPRESSWAY: "EXPY",
  EXTENSION: "EXT",
  EXTENSIONS: "EXTS",
  FALL: "FALL",
  FALLS: "FLS",
  FERRY: "FRY",
  FIELD: "FLD",
  FIELDS: "FLDS",
  FLAT: "FLT",
  FLATS: "FLTS",
  FLOOR: "FL",
  FORD: "FRD",
  FORDS: "FRDS",
  FOREST: "FRST",
  FORGE: "FRG",
  FORGES: "FRGS",
  FORK: "FRK",
  FORKS: "FRKS",
  FORT: "FT",
  FREEWAY: "FWY",
  FRONT: "FRNT",
  GARDEN: "GDN",
  GARDENS: "GDNS",
  GATEWAY: "GTWY",
  GLEN: "GLN",
  GLENS: "GLNS",
  GREEN: "GRN",
  GREENS: "GRNS",
  GROVE: "GRV",
  GROVES: "GRVS",
  HANGAR: "HNGR",
  HARBOR: "HBR",
  HARBORS: "HBRS",
  HAVEN: "HVN",
  HEIGHTS: "HTS",
  HIGHWAY: "HWY",
  HILL: "HL",
  HILLS: "HLS",
  HOLLOW: "HOLW",
  INLET: "INLT",
  INTERSTATE: "I",
  ISLAND: "IS",
  ISLANDS: "ISS",
  ISLE: "ISLE",
  JUNCTION: "JCT",
  JUNCTIONS: "JCTS",
  KEY: "KY",
  KEYS: "KYS",
  KNOLL: "KNL",
  KNOLLS: "KNLS",
  LAKE: "LK",
  LAKES: "LKS",
  LAND: "LAND",
  LANDING: "LNDG",
  LANE: "LN",
  LIGHT: "LGT",
  LIGHTS: "LGTS",
  LOAF: "LF",
  LOBBY: "LBBY",
  LOCK: "LCK",
  LOCKS: "LCKS",
  LODGE: "LDG",
  LOOP: "LOOP",
  LOT: "LOT",
  LOWER: "LOWR",
  MALL: "MALL",
  MANOR: "MNR",
  MANORS: "MNRS",
  MEADOW: "MDW",
  MEADOWS: "MDWS",
  MEWS: "MEWS",
  MILL: "ML",
  MILLS: "MLS",
  MISSION: "MSN",
  MOORHEAD: "MHD",
  MOTORWAY: "MTWY",
  MOUNT: "MT",
  MOUNTAIN: "MTN",
  MOUNTAINS: "MTNS",
  NECK: "NCK",
  OFFICE: "OFC",
  ORCHARD: "ORCH",
  OVAL: "OVAL",
  OVERPASS: "OPAS",
  PARK: "PARK",
  PARKS: "PARK",
  PARKWAY: "PKWY",
  PARKWAYS: "PKWY",
  PASS: "PASS",
  PASSAGE: "PSGE",
  PATH: "PATH",
  PENTHOUSE: "PH",
  PIER: "PIER",
  PIKE: "PIKE",
  PINE: "PNE",
  PINES: "PNES",
  PLACE: "PL",
  PLAIN: "PLN",
  PLAINS: "PLNS",
  PLAZA: "PLZ",
  POINT: "PT",
  POINTS: "PTS",
  PORT: "PRT",
  PORTS: "PRTS",
  PRAIRIE: "PR",
  RADIAL: "RADL",
  RAMP: "RAMP",
  RANCH: "RNCH",
  RAPID: "RPD",
  RAPIDS: "RPDS",
  REAR: "REAR",
  REST: "RST",
  RIDGE: "RDG",
  RIDGES: "RDGS",
  RIVER: "RIV",
  ROAD: "RD",
  ROADS: "RDS",
  ROOM: "RM",
  ROUTE: "RTE",
  ROW: "ROW",
  RUE: "RUE",
  RUN: "RUN",
  SHOAL: "SHL",
  SHOALS: "SHLS",
  SHORE: "SHR",
  SHORES: "SHRS",
  SIDE: "SIDE",
  SKYWAY: "SKWY",
  SLIP: "SLIP",
  SPACE: "SPC",
  SPRING: "SPG",
  SPRINGS: "SPGS",
  SPUR: "SPUR",
  SPURS: "SPUR",
  SQUARE: "SQ",
  SQUARES: "SQS",
  STATION: "STA",
  STOP: "STOP",
  STREAM: "STRM",
  STREET: "ST",
  STREETS: "STS",
  SUITE: "STE",
  SUMMIT: "SMT",
  THROUGHWAY: "TRWY",
  TRACE: "TRCE",
  TRACK: "TRAK",
  TRAILER: "TRLR",
  TRAIL: "TRL",
  TUNNEL: "TUNL",
  TURNPIKE: "TPKE",
  UNDERPASS: "UPAS",
  UNION: "UN",
  UNIONS: "UNS",
  UNIT: "UNIT",
  UPPER: "UPPR",
  VALLEY: "VLY",
  VALLEYS: "VLYS",
  VIADUCT: "VIA",
  VIEW: "VW",
  VIEWS: "VWS",
  VILLAGE: "VLG",
  VILLAGES: "VLGS",
  VILLE: "VL",
  VISTA: "VIS",
  WALK: "WALK",
  WALKS: "WALK",
  WALL: "WALL",
  WAY: "WAY",
  WAYS: "WAYS",
  WELL: "WL",
  WELLS: "WLS",
};

export function abbreviateAddress(address: string): string {
  const parts = address.split(" ");
  const result = parts.map((part) => {
    const sanitized = part.replace(/[^a-zA-Z0-9]/g, "").toUpperCase();
    return abbreviations[sanitized] || part;
  });
  return result.join(" ");
}

export function joinAddress(address: any) {
  const { streetLine, city, state } = address;
  return `${streetLine} ${city}, ${state}`;
}

export function buildDatafinityQuery(address: any) {
  const { streetLine, city, state } = address;
  const abbreviatedStreet = abbreviateAddress(streetLine).toLowerCase();
  return `country:US AND address:"${abbreviatedStreet}" AND city:"${city.toLowerCase()}" AND province:${state}`;
}
