name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test
        env:
          NODE_ENV: test

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./test-results/coverage/lcov.info
          fail_ci_if_error: false

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-results-${{ matrix.node-version }}
          path: |
            test-results/
            !test-results/coverage/tmp/

  e2e-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build application
        run: npm run build

      - name: Run E2E tests
        run: npm run test:playwright
        continue-on-error: true
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:4173
          VITE_BDD_USER: ${{ secrets.TEST_USER_EMAIL }}
          VITE_BDD_PASS: ${{ secrets.TEST_USER_PASSWORD }}

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: |
            playwright-report/
            test-results/

  bdd-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install firefox

      - name: Install wait-on
        run: npm install -g wait-on

      - name: Start development server
        run: npm run dev &

      - name: Wait for server
        run: npx wait-on http://localhost:5173 --timeout 60000

      - name: Run BDD tests
        run: npm run bdd
        continue-on-error: true
        env:
          VITE_BDD_USER: ${{ secrets.TEST_USER_EMAIL }}
          VITE_BDD_PASS: ${{ secrets.TEST_USER_PASSWORD }}
          HEADLESS: true

      - name: Upload BDD test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: bdd-test-results
          path: |
            src/tests/data/test-results.json

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  type-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npx vue-tsc@latest --noEmit || echo "Type check failed but continuing"
        continue-on-error: true

  dependency-audit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Audit dependencies
        run: npm audit --audit-level=moderate || echo "Audit found vulnerabilities but continuing CI"
        continue-on-error: true

  test-summary:
    runs-on: ubuntu-latest
    needs:
      [
        unit-tests,
        e2e-tests,
        bdd-tests,
        lint,
        type-check,
        dependency-audit,
      ]
    if: always()

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Generate test summary
        run: |
          echo "# Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Job Results" >> $GITHUB_STEP_SUMMARY
          echo "- Unit Tests: ${{ needs.unit-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- E2E Tests: ${{ needs.e2e-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- BDD Tests: ${{ needs.bdd-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Lint: ${{ needs.lint.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Type Check: ${{ needs.type-check.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Dependency Audit: ${{ needs.dependency-audit.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ -f "unit-test-results-20.x/test-results/vitest-results.json" ]; then
            echo "## Coverage Report" >> $GITHUB_STEP_SUMMARY
            echo "Coverage reports are available in the artifacts." >> $GITHUB_STEP_SUMMARY
          fi
