{
  "permissions": {
    "allow": [
      "Bash(npm run build:*)",
      "Bash(npm run format:*)",
      "Bash(npm run lint)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr checks:*)",
      "Bash(npm run test:*)",
      "Bash(gh pr view:*)",
      "Bash(gh workflow:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(npx yaml-lint:*)",
      "Bash(gh run watch:*)",
      "Bash(git push:*)",
      "Bash(git fetch:*)",
      "Bash(amplify status:*)",
      "Bash(grep:*)",
      "Bash(amplify env:*)",
      "Bash(amplify:*)",
      "Bash(aws configure:*)",
      "Bash(mv:*)",
      "Bash(powershell:*)",
      "Bash(cp:*)",
      "WebFetch(domain:docs.amplify.aws)",
      "WebSearch",
      "WebFetch(domain:github.com)",
      "Bash(node:*)",
      "Bash(npm i)",
      "Bash(npm audit:*)",
      "Bash(git checkout:*)",
      "Bash(git pull:*)",
      "Bash(aws ssm get-parameter:*)",
      "Bash(git restore:*)",
      "Bash(npx supabase:*)",
      "Bash(docker ps:*)",
      "Read(/C:\\Users\\weave\\AppData\\Roaming\\Claude/**)",
      "Bash(supabase status:*)",
      "Bash(env)",
      "Read(C:\\Users\\weave\\AppData\\Roaming\\Claude/**)",
      "Bash(npm install:*)",
      "WebFetch(domain:supabase.com)",
      "Read(C:\\Users\\weave\\.claude/**)",
      "mcp__supabase__list_projects",
      "mcp__supabase__get_project",
      "mcp__supabase__list_migrations",
      "mcp__supabase__list_tables",
      "Bash(claude agents list:*)",
      "Read(C:\\Users/**)",
      "Bash(nslookup:*)",
      "Read(C:\\Users\\weave\\OneDrive\\Desktop/**)",
      "mcp__supabase__execute_sql",
      "mcp__supabase__apply_migration",
      "Bash(where python)",
      "Bash(where python3)",
      "Bash(npm run bdd:*)",
      "Bash(npx playwright test:*)",
      "WebFetch(domain:docs.datafiniti.co)",
      "Bash(git log:*)",
      "Bash(npm ls:*)",
      "Bash(find:*)",
      "Bash(npx eslint:*)",
      "WebFetch(domain:www.useanvil.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(docker logs:*)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_evaluate",
      "mcp__playwright__browser_press_key",
      "mcp__playwright__browser_network_requests",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_take_screenshot",
      "Bash(psql:*)",
      "Bash(curl:*)",
      "mcp__playwright__browser_wait_for",
      "Bash(supabase db psql:*)",
      "mcp__playwright__browser_close",
      "Bash(tasklist)",
      "Bash(findstr:*)",
      "Bash(npm run test:persistence:*)",
      "Bash(npm run test:playwright:*)",
      "Bash(del \"C:\\projects\\dealdocs-supabase\\src\\tests\\steps\\index.ts\")",
      "Bash(del \"C:\\projects\\dealdocs-supabase\\tsconfig.cucumber.json\")",
      "Bash(npx vitest run:*)",
      "Bash(npm run test:login:*)",
      "Bash(npm run test:auth:*)",
      "Bash(dir:*)",
      "Bash(npx cucumber-js:*)",
      "Bash(where cucumber-js)",
      "Bash(git show-branch:*)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "C:\\"
    ]
  },
  "enabledMcpjsonServers": [],
  "disabledMcpjsonServers": [
    "playwright",
    "supabase"
  ],
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "*",
        "hooks": [
          {
            "type": "command",
            "command": "node \".claude/hooks/audit_logger.cjs\""
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "*",
        "hooks": [
          {
            "type": "command",
            "command": "node \".claude/hooks/audit_logger.cjs\""
          }
        ]
      }
    ],
    "UserPromptSubmit": [],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "node \".claude/hooks/audit_logger.cjs\""
          },
          {
            "type": "command",
            "command": "node \".claude/hooks/session_manager.cjs\""
          }
        ]
      }
    ],
    "SubagentStop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "node \".claude/hooks/audit_logger.cjs\""
          },
          {
            "type": "command",
            "command": "node \".claude/hooks/session_manager.cjs\""
          }
        ]
      }
    ],
    "SessionStart": [
      {
        "matcher": "",
        "hooks": []
      }
    ]
  },
  "mcpServers": {
    "playwright": {
      "command": "cmd",
      "args": [
        "/c",
        "npx",
        "-y",
        "@playwright/mcp",
        "--stdio"
      ]
    },
    "supabase": {
      "command": "cmd",
      "args": [
        "/c",
        "npx",
        "-y",
        "@supabase/mcp-server-supabase@latest"
      ],
      "env": {
        "SUPABASE_ACCESS_TOKEN": "â€¦"
      }
    }
  }
}