enum PartyType {
  BUYER
  SELLER
}

enum FinancingType {
  NONE
  BYTHIRDPARTY
  BYLOANASSUMPTION
  BYSELLER
}

enum SurveyType {
  EXISTINGBYSELLER
  NEWBYBUYER
  NEWBYSELLER
}

enum LeaseType {
  RESIDENTIAL
  FIXTURE
  NATURALRESOURCE
}

enum LoanType {
  CONVENTIONAL
  VA
  FHA
  VAGUARANTEED
  USDAGUARANTEED
  REVERSEMORTGAGE
  OTHERFINANCING
}

enum TerminationOnAppraisalType {
  WAIVER
  PARTIALWAIVER
  ADDITIONALRIGHTTOTERMINATE
}

enum PromissoryNoteType {
  SINGLE
  MONTHLY
  INTEREST
}

enum InterestPayableType {
  ATMATURITY
  MONTHLY
  QUARTERLY
}

type Property {
  lot: String
  block: String
  county: String
  legalDescription: String
  mlsNumber: String
  streetAddress: String
  city: String
  state: String
  postalCode: String
  subdivision: String
  yearBuilt: Int
  numBedroom: Float
  numBathroom: Float
  numFloor: Float
  floorSizeValue: Float
  floorSizeUnit: String
  lotSizeValue: Float
  lotSizeUnit: String
  mostRecentPriceAmount: Int
  mostRecentPriceDate: AWSDate
  dateAdded: AWSDate
  dateUpdated: AWSDate
  description: String
  imageUrl: String
}

type PropertyCondition {
  sellerDisclosureReceived: Boolean
  sellerDisclosureDaysToProduce: Int
  sellerRequiredToDisclose: Boolean
  buyerAcceptsAsIs: Boolean
  retainedImprovements: String
  buyerAcceptanceRepairSpecifics: String
  serviceContractReimbursementAmount: Int
}

type Finance {
  hasPreferredLender: Boolean
  wantsLenderReferral: Boolean
  buyerApprovalNoticeDays: Int
  cashAmount: Int
  fhaVaAppraisedValue: Int
  fhaSectionNumber: Int
  financingType: FinancingType
  interestRate: Float
  interestRateYears: Int
  isBuyerApprovalRequired: Boolean
  isSecondMortgage: Boolean
  loanType: LoanType
  originationChargePercent: Float
  otherFinancingLenderName: String
  otherFinancingWaiveRights: Boolean
  principalAmount: Int
  reverseMortgageIsFHAInsured: Boolean
  storageKey: String
  termYears: Int
  totalSalesPrice: Int
  terminationOnAppraisalType: TerminationOnAppraisalType
  terminationOpinionOfValueAmount: Float
  terminationDaysAfterEffectiveDate: Int
  terminationAppraisedValueLessThan: Float
}

type BuyerAgent {
  hasBuyerAgent: Boolean
  firmName: String
  firmLicenseNumber: String
  firmStreetAddress: String
  firmCity: String
  firmState: String
  firmPostalCode: String
  firmPhone: String
  associateName: String
  associateLicenseNumber: String
  associateTeamName: String
  associateEmail: String
  associatePhone: String
  associateSupervisorName: String
  associateSupervisorLicenseNumber: String
}

type ListingAgent {
  hasListingAgentInfo: Boolean
  firmName: String
  firmLicenseNumber: String
  firmStreetAddress: String
  firmCity: String
  firmState: String
  firmPostalCode: String
  firmPhone: String
  listingAssociateName: String
  listingAssociateLicenseNumber: String
  listingAssociateTeamName: String
  listingAssociateEmail: String
  listingAssociatePhone: String
  listingAssociateSupervisorName: String
  listingAssociateSupervisorLicenseNumber: String
  sellingAssociateName: String
  sellingAssociateLicenseNumber: String
  sellingAssociateTeamName: String
  sellingAssociateEmail: String
  sellingAssociatePhone: String
  sellingAssociateSupervisorName: String
  sellingAssociateSupervisorLicenseNumber: String
  sellingAssociateStreetAddress: String
  sellingAssociateCity: String
  sellingAssociateState: String
  sellingAssociatePostalCode: String
}

type Attorney {
  hasAttorney: Boolean
  name: String
  streetAddress: String
  city: String
  state: String
  postalCode: String
  phone: String
  email: String
  fax: String
}

type ContractParty {
  primaryName: String
  phone: String
  fax: String
  email: String
  hasSecondaryParty: Boolean
  secondaryName: String
  secondaryPhone: String
  secondaryFax: String
  secondaryEmail: String
}

type TitleDetail {
  hasTitleCompany: Boolean
  wantsTitleReferral: Boolean
  titleCompanyName: String
  titleCompanyStreetAddress: String
  titleCompanyCity: String
  titleCompanyState: String
  titleCompanyPostalCode: String
  standardExceptionsToBeAmended: Boolean
  standardExceptionsToBeAmendedBy: PartyType
  titleFurnishingParty: PartyType
  escrowAgentName: String
  earnestMoney: Int
  hasOptionFee: Boolean
  optionFee: Int
  hasAdditionalEarnestMoney: Boolean
  additionalEarnestMoney: Int
  additionalEarnestMoneyDaysToDeliver: Int
  optionPeriodDaysToTerminate: Int
}

type TitleObjections {
  objections: String
  daysToObject: Int
}

type SurveyDetail {
  daysToFurnish: Int
  type: SurveyType
  furnishingPartyIfExistingIsUnacceptable: PartyType
}

type TitleNotices {
  isInMUD: Boolean
  isInCoastalArea: Boolean
  isInPublicImprovementDistrict: Boolean
  isInPropaneServiceArea: Boolean
}

type Leases {
  hasResidentialLease: Boolean
  hasFixtureLease: Boolean
  hasMineralLease: Boolean
  mineralLeaseCopyDelivered: Boolean
  mineralLeaseDaysToDeliveryCopy: Int
}

type BrokerDisclosure {
  buyerIsThirdPartyAgent: Boolean
  buyerIsRelatedToSeller: Boolean
  buyerHasStakeInProperty: Boolean
  buyerIsBeingCompensated: Boolean
  buyerDisclosure: String
}

type ClosingDetail {
  closingDate: AWSDate
}

type PossessionDetail {
  possessionUponClosing: Boolean
  possessionAccordingToTempLease: Boolean
}

type BuyerProvisionsDetail {
  buyerProvisions: String
  additionalExpensesPaidBySeller: Int
}

type NoticesDetail {
  deliverToAddress: Boolean
  streetAddress: String
  city: String
  state: String
  postalCode: String
  deliverByPhone: Boolean
  phone: String
  deliverByEmailFax1: Boolean
  emailFax1: String
  deliveryByEmailFax2: Boolean
  emailFax2: String
  deliverToAgent: Boolean
  agentContact: String
}

type HomeownersAssociationAddendum {
  hasHomeownersAssociation: Boolean
  storageKey: String
  associationName: String
  associationPhoneNumber: String
  requiresSubdivisionInfo: Boolean
  receivedSubdivisionInfo: Boolean
  requiresUpdatedResaleCertificate: Boolean
  subdivisionInfoProvidedBy: PartyType
  subdivisionInfoDaysToDeliver: Int
  buyerFeesNotToExceed: Int
  feeForTitleCompanyPaidBy: PartyType
}

type LeadBasedPaintAddendum {
  hasLeadBasedPaintDisclosure: Boolean
  storageKey: String
  leadBasedPaintDisclosure: String
}

type RightToTerminateByLenderAppraisalAddendum {
  hasRightToTerminateByLenderAppraisal: Boolean
  storageKey: String
  appraisalAmount: Int
}

type SellerTemporaryLeaseAddendum {
  hasSellersTemporaryLease: Boolean
  storageKey: String
  leaseLength: Int
}

type EtchPacket @model @auth(rules: [{ allow: public }, { allow: owner }]) {
  eid: String! @primaryKey
  documentGroup: DocumentGroup!
  contractId: ID! @index(name: "byContract")
}

type DocumentGroupFile {
  downloadURL: String!
  filename: String!
  name: String!
  type: String!
}

type DocumentGroup {
  eid: String!
  status: String!
  files: [DocumentGroupFile]!
  signers: [Signer]!
}

type Signer {
  eid: String!
  aliasId: String!
  name: String!
  email: String!
  routingOrder: Int!
  signActionType: String!
  status: String!
  uploadKeys: [String]
}

type Contract @model @auth(rules: [{ allow: public }, { allow: owner }]) {
  id: ID!
  buyers: ContractParty
  property: Property
  finance: Finance
  leases: Leases
  sellers: ContractParty
  title: TitleDetail
  titleObjections: TitleObjections
  survey: SurveyDetail
  titleNotices: TitleNotices
  propertyCondition: PropertyCondition
  brokerDisclosure: BrokerDisclosure
  closing: ClosingDetail
  possession: PossessionDetail
  buyerProvisions: BuyerProvisionsDetail
  buyerNotices: NoticesDetail
  sellerNotices: NoticesDetail
  buyerAttorney: Attorney
  buyerAgent: BuyerAgent
  sellerAttorney: Attorney
  listingAgent: ListingAgent
  markedQuestions: AWSJSON
  homeownersAssociationAddendum: HomeownersAssociationAddendum
  leadBasedPaintAddendum: LeadBasedPaintAddendum
  rightToTerminateByLenderAppraisalAddendum: RightToTerminateByLenderAppraisalAddendum
  sellerTemporaryLeaseAddendum: SellerTemporaryLeaseAddendum
}

type Account
  @model
  @auth(
    rules: [
      { allow: public }
      { allow: owner, ownerField: "owner", operations: [read, update, delete] }
    ]
  ) {
  id: ID!
  email: String!
  billingId: String
  contract: [Contract] @hasMany
  isPaid: Boolean
  street1: String
  street2: String
  city: String
  state: String
  postalCode: String
  firstName: String
  middleInitial: String
  lastName: String
  owner: String! @index(name: "byOwner")
}

type EmailPacket @model @auth(rules: [{ allow: public }]) {
  id: ID!
  accountId: ID! @index(name: "byAccount")
  contractId: ID! @index(name: "byContract")
  streetAddress: String!
  agentEmail: String!
  agentName: String!
  status: String!
  comments: String
  subject: String!
  body: String!
  contractFiles: [String!]!
  preApprovalFile: String!
  earnestFile: String!
  optionFile: String!
}
